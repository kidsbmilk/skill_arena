记录：

1、slf4j中使用snowflake来生成全局唯一id，这个唯一id是放在线程本地变量里的，并且在处理完后要清除，这个放的操作是在哪里进行的，是spring的拦截器，还是slf4j的拦截器？

既不是spring的拦截器，也不是slf4j的拦截器，而是Servlet的过滤器，spring是跑在tomcat\Servlet这一套东西上的，log4j可以设置拦截器，但是是一些简单的级别的过滤。

在Servlet过滤器中，过滤所有请求，并在过滤操作中设置线程本地变量，这样log4j在打印时就可以读取这个线程本地变量了，就有logid了。

深感到动手实验能力有点差，还是对框架的使用不太得心应手，然后不去实验，又越来越差。

其实并不是动手能力差，而是好高骛远、眼高手底的原因，应该耐心地从最基础的教程看起，这样虽然慢，但是会比较扎实，一步一步地，也会有成就感。

log4j中既有threadLocal，又有MDC/NDC，MDC/NDC应该是基于threadLocal实现的，都可以用来添加logid。

Spring MVC结合日志框架给一次请求日志打印出唯一标示： https://blog.csdn.net/helloworldwt/article/details/51818309 这个链接是重写PatternParser来实现的，综合上述可知，要想添加logid，一是拦截所有请求并添加threadLocal，另一个是parser里的模式解析。

也可以使用spring的拦截器来实现。

2、log4j本身也可以配置logid来标记唯一请求，与上面有什么差别呢？

log4j本身配置的logid比较简单，可能并不能满足复杂的业务的需求。

3、上面两者如何做实验验证一下呢？

写一个简单的springboot web应用，然后配置一个slf4j-log4j，就可以做实验了。

4、动手实验能力差，得从最基础的开始做起，比如用springboot搭一个简单的网站出来。

5、其实springboot就可以快速做一个小的http服务器，也可以做代理服务器。

6、访问链接： http://localhost:8888/next http://localhost:8888/sub?userName=zz http://localhost:8888/springboot/getUserByGet?userName=zz